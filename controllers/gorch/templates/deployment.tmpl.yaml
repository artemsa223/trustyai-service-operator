kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{.Orchestrator.Name}}
  namespace: {{.Orchestrator.Namespace}}
  annotations:
      sidecar.istio.io/inject: "true"
  labels:
    app: {{.Orchestrator.Name}}
    component: {{.Orchestrator.Name}}
    deploy-name: {{.Orchestrator.Name}}
    app.kubernetes.io/instance: {{.Orchestrator.Name}}
    app.kubernetes.io/name: {{.Orchestrator.Name}}
    app.kubernetes.io/part-of: trustyai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Orchestrator.Name}}
      component: {{.Orchestrator.Name}}
      deploy-name: {{.Orchestrator.Name}}
      app.kubernetes.io/instance: {{.Orchestrator.Name}}
      app.kubernetes.io/name: {{.Orchestrator.Name}}
      app.kubernetes.io/part-of: trustyai
  template:
    metadata:
      labels:
        app: {{.Orchestrator.Name}}
        component: {{.Orchestrator.Name}}
        deploy-name: {{.Orchestrator.Name}}
        app.kubernetes.io/instance: {{.Orchestrator.Name}}
        app.kubernetes.io/name: {{.Orchestrator.Name}}
        app.kubernetes.io/part-of: trustyai
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      volumes:
        - name: {{.Orchestrator.Name}}-config
          configMap:
            name: {{.Orchestrator.Spec.OrchestratorConfig}}
            defaultMode: 420
        {{if .Orchestrator.Spec.VLLMGatewayConfig}}
        - name: {{.Orchestrator.Name}}-vllm-config
          configMap:
            name: {{.Orchestrator.Spec.VLLMGatewayConfig}}
            defaultMode: 420
        {{end}}
      serviceAccountName: {{.Orchestrator.Name}}-serviceaccount
      containers:
        - name: {{.Orchestrator.Name}}
          image: {{.ContainerImages.OrchestratorImage}}
          env:
            - name: ORCHESTRATOR_CONFIG
              value: /config/config.yaml
            - name: HTTP_PORT
              value: '8033'
            - name: RUST_BACKTRACE
              value: 'full'
            - name: RUST_LOG
              value: 'info'
          volumeMounts:
            - name: {{.Orchestrator.Name}}-config
              readOnly: true
              mountPath: /config/config.yaml
              subPath: config.yaml
          ports:
            - name: http
              containerPort: 8033
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: '1'
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            readinessProbe:
              httpGet:
                path: /health
                port: 8033
                scheme: HTTP
              initialDelaySeconds: 10
              timeoutSeconds: 10
              periodSeconds: 20
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            command:
              - /app/bin/fms-guardrails-orchestr8
        {{if .Orchestrator.Spec.VLLMGatewayConfig}}
        - name: {{.Orchestrator.Name}}-gateway
          image : {{.ContainerImages.GatewayImage}}
          command: ["/app/vllm-orchestrator-gateway"]
          volumeMounts:
            - name: {{.Orchestrator.Name}}-vllm-config
              readOnly: true
              mountPath: /config/config.yaml
              subPath: config.yaml
          env:
            - name: GATEWAY_CONFIG
              value: /config/config.yaml
        - name: {{.Orchestrator.Name}}-detectors
          image : {{.ContainerImages.RegexDetectorImage}}
          command: ["/bin/sh", "-c", "/app/local-detectors"]
        {{end}}
